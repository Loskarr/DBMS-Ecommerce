--------------------------------------------------------
--  File created - Monday-May-06-2024   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ADDRESS
--------------------------------------------------------

  CREATE TABLE "EADM"."ADDRESS" 
   (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"STREET_NUMBER" VARCHAR2(50 BYTE), 
	"ADDRESS_LINE1" VARCHAR2(255 BYTE), 
	"ADDRESS_LINE2" VARCHAR2(255 BYTE), 
	"CITY" VARCHAR2(100 BYTE), 
	"REGION" VARCHAR2(100 BYTE), 
	"POSTAL_CODE" VARCHAR2(20 BYTE), 
	"COUNTRY_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table COUNTRY
--------------------------------------------------------

  CREATE TABLE "EADM"."COUNTRY" 
   (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"COUNTRY_NAME" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ORDER_LINE
--------------------------------------------------------

  CREATE TABLE "EADM"."ORDER_LINE" 
   (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"PRODUCT_ITEM_ID" NUMBER, 
	"ORDER_ID" NUMBER, 
	"QUANTITY" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ORDER_STATUS
--------------------------------------------------------

  CREATE TABLE "EADM"."ORDER_STATUS" 
   (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"STATUS" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PRODUCT
--------------------------------------------------------

  CREATE TABLE "EADM"."PRODUCT" 
   (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"CATEGORY_ID" NUMBER, 
	"NAME" VARCHAR2(100 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"PRODUCT_IMAGE" VARCHAR2(255 BYTE), 
	"PRODUCT_STATUS" VARCHAR2(10 BYTE) DEFAULT 'AVAIL'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PRODUCT_CATEGORY
--------------------------------------------------------

  CREATE TABLE "EADM"."PRODUCT_CATEGORY" 
   (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"PARENT_CATEGORY_ID" NUMBER, 
	"CATEGORY_NAME" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PRODUCT_CONFIGURATION
--------------------------------------------------------

  CREATE TABLE "EADM"."PRODUCT_CONFIGURATION" 
   (	"PRODUCT_ITEM_ID" NUMBER, 
	"VARIATION_OPTION_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PRODUCT_IMAGE
--------------------------------------------------------

  CREATE TABLE "EADM"."PRODUCT_IMAGE" 
   (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"PRODUCT_ITEM_ID" NUMBER, 
	"IMAGE_URL" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PRODUCT_ITEM
--------------------------------------------------------

  CREATE TABLE "EADM"."PRODUCT_ITEM" 
   (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"PRODUCT_ID" NUMBER, 
	"SKU" VARCHAR2(50 BYTE), 
	"QUANTITY_IN_STOCK" NUMBER, 
	"PRICE" NUMBER, 
	"PRODUCT_ITEM_STATUS" VARCHAR2(10 BYTE) DEFAULT 'AVAIL'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PROMOTION
--------------------------------------------------------

  CREATE TABLE "EADM"."PROMOTION" 
   (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"NAME" VARCHAR2(100 BYTE), 
	"DESCRIPTION" VARCHAR2(255 BYTE), 
	"DISCOUNT_RATE" NUMBER, 
	"START_DATE" DATE, 
	"END_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PROMOTION_CATEGORY
--------------------------------------------------------

  CREATE TABLE "EADM"."PROMOTION_CATEGORY" 
   (	"CATEGORY_ID" NUMBER, 
	"PROMOTION_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SHIPPING_METHOD
--------------------------------------------------------

  CREATE TABLE "EADM"."SHIPPING_METHOD" 
   (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"NAME" VARCHAR2(100 BYTE), 
	"PRICE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SHOP_ORDER
--------------------------------------------------------

  CREATE TABLE "EADM"."SHOP_ORDER" 
   (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"USER_ID" NUMBER, 
	"ORDER_DATE" DATE, 
	"PAYMENT_METHOD" VARCHAR2(100 BYTE), 
	"SHIPPING_ADDRESS" VARCHAR2(255 BYTE), 
	"SHIPPING_METHOD_ID" NUMBER, 
	"ORDER_TOTAL" NUMBER, 
	"ORDER_STATUS" NUMBER, 
	"PAID" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table SITE_USER
--------------------------------------------------------

  CREATE TABLE "EADM"."SITE_USER" 
   (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"EMAIL_ADDRESS" VARCHAR2(255 BYTE), 
	"PHONE_NUMBER" VARCHAR2(20 BYTE), 
	"PICTURE_URL" VARCHAR2(255 BYTE), 
	"PASSWORD" VARCHAR2(255 BYTE), 
	"LAST_NAME" VARCHAR2(100 BYTE), 
	"FIRST_NAME" VARCHAR2(100 BYTE), 
	"ROLE" VARCHAR2(3 BYTE) DEFAULT 'cus'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table USER_ADDRESS
--------------------------------------------------------

  CREATE TABLE "EADM"."USER_ADDRESS" 
   (	"USER_ID" NUMBER, 
	"ADDRESS_ID" NUMBER, 
	"IS_DEFAULT" NUMBER(1,0)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table USER_WALLET
--------------------------------------------------------

  CREATE TABLE "EADM"."USER_WALLET" 
   (	"USER_ID" NUMBER, 
	"WALLET_BALANCE" NUMBER DEFAULT 0
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table VARIATION
--------------------------------------------------------

  CREATE TABLE "EADM"."VARIATION" 
   (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"CATEGORY_ID" NUMBER, 
	"NAME" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table VARIATION_OPTION
--------------------------------------------------------

  CREATE TABLE "EADM"."VARIATION_OPTION" 
   (	"ID" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"VARIATION_ID" NUMBER, 
	"VALUE" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for View PRODUCTS_RETRIEVE_VIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE EDITIONABLE VIEW "EADM"."PRODUCTS_RETRIEVE_VIEW" ("ID", "PRODUCT_ID", "SKU", "QUANTITY_IN_STOCK", "PRICE", "PRODUCT_ITEM_STATUS", "NAME", "DESCRIPTION", "IMAGE_MAIN", "CATEGORY_NAME", "PRODUCT_CATEGORY_ID") AS 
  select
    pi."ID",pi."PRODUCT_ID",pi."SKU",pi."QUANTITY_IN_STOCK",pi."PRICE",pi."PRODUCT_ITEM_STATUS",
    p.name,
    p.description,
    p.product_image as image_main,
    pc.category_name,
    pc.id as product_category_id
from product_item pi
inner join product p on p.id = pi.product_id
left join product_category pc on pc.id = p.category_id 
;
--------------------------------------------------------
--  DDL for Materialized View PRODUCTS_RETRIEVE_MATERIALIZE_VIEW
--------------------------------------------------------

  CREATE MATERIALIZED VIEW "EADM"."PRODUCTS_RETRIEVE_MATERIALIZE_VIEW" ("ID", "PRODUCT_ID", "SKU", "QUANTITY_IN_STOCK", "PRICE", "PRODUCT_ITEM_STATUS", "NAME", "DESCRIPTION", "IMAGE_MAIN", "CATEGORY_NAME", "PRODUCT_CATEGORY_ID")
  SEGMENT CREATION IMMEDIATE
  ORGANIZATION HEAP PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" 
  BUILD IMMEDIATE
  USING INDEX 
  REFRESH COMPLETE ON DEMAND
  USING DEFAULT LOCAL ROLLBACK SEGMENT
  USING ENFORCED CONSTRAINTS DISABLE ON QUERY COMPUTATION DISABLE QUERY REWRITE
  AS select
    pi.*,
    p.name,
    p.description,
    p.product_image as image_main,
    pc.category_name,
    pc.id as product_category_id
from product_item pi
inner join product p on p.id = pi.product_id
left join product_category pc on pc.id = p.category_id ;

   COMMENT ON MATERIALIZED VIEW "EADM"."PRODUCTS_RETRIEVE_MATERIALIZE_VIEW"  IS 'snapshot table for snapshot EADM.PRODUCTS_RETRIEVE_MATERIALIZE_VIEW';
--------------------------------------------------------
--  DDL for Materialized View PRODUCTS_WITH_AVAILABLE_PROMOTION_MATERIALIZE_VIEW
--------------------------------------------------------

  CREATE MATERIALIZED VIEW "EADM"."PRODUCTS_WITH_AVAILABLE_PROMOTION_MATERIALIZE_VIEW" ("ID", "PRODUCT_ID", "SKU", "QUANTITY_IN_STOCK", "PRICE", "PRODUCT_ITEM_STATUS", "NAME", "DESCRIPTION", "IMAGE_MAIN", "CATEGORY_NAME", "PRODUCT_CATEGORY_ID", "PROMOTION_NAME", "PROMOTION_DESCRIPTION", "DISCOUNT_RATE", "START_DATE", "END_DATE", "PRICE_AFTER_DISCOUNT", "PROMOTION_STATUS", "DATE_LEFT")
  SEGMENT CREATION DEFERRED
  ORGANIZATION HEAP PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "SYSTEM" 
  BUILD IMMEDIATE
  USING INDEX 
  REFRESH COMPLETE ON DEMAND
  USING DEFAULT LOCAL ROLLBACK SEGMENT
  USING ENFORCED CONSTRAINTS DISABLE ON QUERY COMPUTATION DISABLE QUERY REWRITE
  AS SELECT
    prmv.*,
    pr.name AS promotion_name,
    pr.description AS promotion_description,
    pr.discount_rate,
    pr.start_date,
    pr.end_date,
    (prmv.price - (prmv.price * pr.discount_rate)) AS price_after_discount,
    'Available' AS promotion_status,
    GREATEST(0, TO_DATE(pr.end_date, 'YYYY-MM-DD') - TO_DATE(CURRENT_DATE, 'YYYY-MM-DD')) AS date_left
FROM
    products_retrieve_materialize_view prmv
LEFT JOIN
    product_category pc ON prmv.product_category_id = pc.id
LEFT JOIN
    promotion_category pc2 ON pc.id = pc2.category_id
LEFT JOIN
    promotion pr ON pc2.promotion_id = pr.id
WHERE
    pr.start_date <= CURRENT_DATE
    AND pr.end_date > CURRENT_DATE;

   COMMENT ON MATERIALIZED VIEW "EADM"."PRODUCTS_WITH_AVAILABLE_PROMOTION_MATERIALIZE_VIEW"  IS 'snapshot table for snapshot EADM.PRODUCTS_WITH_AVAILABLE_PROMOTION_MATERIALIZE_VIEW';
--------------------------------------------------------
--  DDL for Materialized View PRODUCTS_WITH_PROMOTION_MATERIALIZE_VIEW
--------------------------------------------------------

  CREATE MATERIALIZED VIEW "EADM"."PRODUCTS_WITH_PROMOTION_MATERIALIZE_VIEW" ("ID", "PRODUCT_ID", "SKU", "QUANTITY_IN_STOCK", "PRICE", "PRODUCT_ITEM_STATUS", "NAME", "DESCRIPTION", "IMAGE_MAIN", "CATEGORY_NAME", "PRODUCT_CATEGORY_ID", "PROMOTION_NAME", "PROMOTION_DESCRIPTION", "DISCOUNT_RATE", "START_DATE", "END_DATE", "PRICE_AFTER_DISCOUNT", "PROMOTION_STATUS", "DATE_LEFT")
  SEGMENT CREATION IMMEDIATE
  ORGANIZATION HEAP PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" 
  BUILD IMMEDIATE
  USING INDEX 
  REFRESH COMPLETE ON DEMAND
  USING DEFAULT LOCAL ROLLBACK SEGMENT
  USING ENFORCED CONSTRAINTS DISABLE ON QUERY COMPUTATION DISABLE QUERY REWRITE
  AS SELECT
    prmv.*,
    pr.name AS promotion_name,
    pr.description AS promotion_description,
    pr.discount_rate,
    pr.start_date,
    pr.end_date,
    (prmv.price - (prmv.price * pr.discount_rate)) AS price_after_discount,
    CASE
        WHEN pr.start_date <= CURRENT_DATE AND pr.end_date > CURRENT_DATE THEN 'Available'
        WHEN pr.start_date > CURRENT_DATE THEN 'Upcoming'
        ELSE 'Expired'
    END AS promotion_status,
    GREATEST(0, TO_DATE(pr.end_date, 'YYYY-MM-DD') - TO_DATE(CURRENT_DATE, 'YYYY-MM-DD')) AS date_left
FROM
    products_retrieve_materialize_view prmv
LEFT JOIN
    product_category pc ON prmv.product_category_id = pc.id
LEFT JOIN
    promotion_category pc2 ON pc.id = pc2.category_id
LEFT JOIN
    promotion pr ON pc2.promotion_id = pr.id;

   COMMENT ON MATERIALIZED VIEW "EADM"."PRODUCTS_WITH_PROMOTION_MATERIALIZE_VIEW"  IS 'snapshot table for snapshot EADM.PRODUCTS_WITH_PROMOTION_MATERIALIZE_VIEW';
REM INSERTING into EADM.ADDRESS
SET DEFINE OFF;
Insert into EADM.ADDRESS (ID,STREET_NUMBER,ADDRESS_LINE1,ADDRESS_LINE2,CITY,REGION,POSTAL_CODE,COUNTRY_ID) values (1,'123','Main Street','Apt 1','New York','NY','10001',1);
Insert into EADM.ADDRESS (ID,STREET_NUMBER,ADDRESS_LINE1,ADDRESS_LINE2,CITY,REGION,POSTAL_CODE,COUNTRY_ID) values (2,'456','Maple Avenue',null,'Toronto','ON','M5G 2N2',2);
REM INSERTING into EADM.COUNTRY
SET DEFINE OFF;
Insert into EADM.COUNTRY (ID,COUNTRY_NAME) values (1,'USA');
Insert into EADM.COUNTRY (ID,COUNTRY_NAME) values (2,'Canada');
Insert into EADM.COUNTRY (ID,COUNTRY_NAME) values (3,'UK');
Insert into EADM.COUNTRY (ID,COUNTRY_NAME) values (4,'Germany');
Insert into EADM.COUNTRY (ID,COUNTRY_NAME) values (5,'France');
REM INSERTING into EADM.ORDER_LINE
SET DEFINE OFF;
Insert into EADM.ORDER_LINE (ID,PRODUCT_ITEM_ID,ORDER_ID,QUANTITY) values (1,1,1,2);
Insert into EADM.ORDER_LINE (ID,PRODUCT_ITEM_ID,ORDER_ID,QUANTITY) values (2,2,2,1);
Insert into EADM.ORDER_LINE (ID,PRODUCT_ITEM_ID,ORDER_ID,QUANTITY) values (3,3,3,3);
REM INSERTING into EADM.ORDER_STATUS
SET DEFINE OFF;
Insert into EADM.ORDER_STATUS (ID,STATUS) values (1,'Pending');
Insert into EADM.ORDER_STATUS (ID,STATUS) values (2,'Processing');
REM INSERTING into EADM.PRODUCT
SET DEFINE OFF;
Insert into EADM.PRODUCT (ID,CATEGORY_ID,NAME,DESCRIPTION,PRODUCT_IMAGE,PRODUCT_STATUS) values (1,1,'Laptop','High-performance laptop','laptop.jpg','AVAIL');
Insert into EADM.PRODUCT (ID,CATEGORY_ID,NAME,DESCRIPTION,PRODUCT_IMAGE,PRODUCT_STATUS) values (2,1,'Smartphone','Latest smartphone model','smartphone.jpg','AVAIL');
Insert into EADM.PRODUCT (ID,CATEGORY_ID,NAME,DESCRIPTION,PRODUCT_IMAGE,PRODUCT_STATUS) values (3,2,'T-Shirt','Comfortable cotton T-shirt','tshirt.jpg','AVAIL');
REM INSERTING into EADM.PRODUCT_CATEGORY
SET DEFINE OFF;
Insert into EADM.PRODUCT_CATEGORY (ID,PARENT_CATEGORY_ID,CATEGORY_NAME) values (1,null,'Electronics');
Insert into EADM.PRODUCT_CATEGORY (ID,PARENT_CATEGORY_ID,CATEGORY_NAME) values (2,null,'Clothing');
Insert into EADM.PRODUCT_CATEGORY (ID,PARENT_CATEGORY_ID,CATEGORY_NAME) values (3,1,'Laptops');
REM INSERTING into EADM.PRODUCT_CONFIGURATION
SET DEFINE OFF;
Insert into EADM.PRODUCT_CONFIGURATION (PRODUCT_ITEM_ID,VARIATION_OPTION_ID) values (1,1);
Insert into EADM.PRODUCT_CONFIGURATION (PRODUCT_ITEM_ID,VARIATION_OPTION_ID) values (1,2);
Insert into EADM.PRODUCT_CONFIGURATION (PRODUCT_ITEM_ID,VARIATION_OPTION_ID) values (3,2);
REM INSERTING into EADM.PRODUCT_IMAGE
SET DEFINE OFF;
Insert into EADM.PRODUCT_IMAGE (ID,PRODUCT_ITEM_ID,IMAGE_URL) values (1,1,'smartphone.jpg');
Insert into EADM.PRODUCT_IMAGE (ID,PRODUCT_ITEM_ID,IMAGE_URL) values (2,2,'tshirt.jpg');
REM INSERTING into EADM.PRODUCT_ITEM
SET DEFINE OFF;
Insert into EADM.PRODUCT_ITEM (ID,PRODUCT_ID,SKU,QUANTITY_IN_STOCK,PRICE,PRODUCT_ITEM_STATUS) values (1,1,'SKU123',10,1500,'AVAIL');
Insert into EADM.PRODUCT_ITEM (ID,PRODUCT_ID,SKU,QUANTITY_IN_STOCK,PRICE,PRODUCT_ITEM_STATUS) values (2,2,'SKU456',5,1000,'AVAIL');
Insert into EADM.PRODUCT_ITEM (ID,PRODUCT_ID,SKU,QUANTITY_IN_STOCK,PRICE,PRODUCT_ITEM_STATUS) values (3,3,'SKU789',20,20,'AVAIL');
REM INSERTING into EADM.PROMOTION
SET DEFINE OFF;
Insert into EADM.PROMOTION (ID,NAME,DESCRIPTION,DISCOUNT_RATE,START_DATE,END_DATE) values (1,'Summer Sale','Up to 50% off on selected items',0.5,to_date('01-JUN-24','DD-MON-RR'),to_date('01-JUL-24','DD-MON-RR'));
Insert into EADM.PROMOTION (ID,NAME,DESCRIPTION,DISCOUNT_RATE,START_DATE,END_DATE) values (2,'Clearance Sale','Last chance to buy at discounted prices',0.3,to_date('01-APR-24','DD-MON-RR'),to_date('30-APR-24','DD-MON-RR'));
REM INSERTING into EADM.PROMOTION_CATEGORY
SET DEFINE OFF;
Insert into EADM.PROMOTION_CATEGORY (CATEGORY_ID,PROMOTION_ID) values (1,1);
Insert into EADM.PROMOTION_CATEGORY (CATEGORY_ID,PROMOTION_ID) values (1,2);
REM INSERTING into EADM.SHIPPING_METHOD
SET DEFINE OFF;
Insert into EADM.SHIPPING_METHOD (ID,NAME,PRICE) values (1,'Standard Shipping',10);
Insert into EADM.SHIPPING_METHOD (ID,NAME,PRICE) values (2,'Express Shipping',20);
REM INSERTING into EADM.SHOP_ORDER
SET DEFINE OFF;
Insert into EADM.SHOP_ORDER (ID,USER_ID,ORDER_DATE,PAYMENT_METHOD,SHIPPING_ADDRESS,SHIPPING_METHOD_ID,ORDER_TOTAL,ORDER_STATUS,PAID) values (1,1,to_date('06-APR-24','DD-MON-RR'),'Credit Card','123 Main St, City, Country',1,100,1,null);
Insert into EADM.SHOP_ORDER (ID,USER_ID,ORDER_DATE,PAYMENT_METHOD,SHIPPING_ADDRESS,SHIPPING_METHOD_ID,ORDER_TOTAL,ORDER_STATUS,PAID) values (2,2,to_date('07-APR-24','DD-MON-RR'),'PayPal','456 Elm St, City, Country',2,150,2,null);
Insert into EADM.SHOP_ORDER (ID,USER_ID,ORDER_DATE,PAYMENT_METHOD,SHIPPING_ADDRESS,SHIPPING_METHOD_ID,ORDER_TOTAL,ORDER_STATUS,PAID) values (3,1,to_date('08-APR-24','DD-MON-RR'),'Cash on Delivery','789 Oak St, City, Country',1,200,1,null);
Insert into EADM.SHOP_ORDER (ID,USER_ID,ORDER_DATE,PAYMENT_METHOD,SHIPPING_ADDRESS,SHIPPING_METHOD_ID,ORDER_TOTAL,ORDER_STATUS,PAID) values (4,2,to_date('09-APR-24','DD-MON-RR'),'Credit Card','101112 Pine St, City, Country',2,250,2,null);
Insert into EADM.SHOP_ORDER (ID,USER_ID,ORDER_DATE,PAYMENT_METHOD,SHIPPING_ADDRESS,SHIPPING_METHOD_ID,ORDER_TOTAL,ORDER_STATUS,PAID) values (5,1,to_date('10-APR-24','DD-MON-RR'),'PayPal','131415 Cedar St, City, Country',1,300,1,null);
REM INSERTING into EADM.SITE_USER
SET DEFINE OFF;
Insert into EADM.SITE_USER (ID,EMAIL_ADDRESS,PHONE_NUMBER,PICTURE_URL,PASSWORD,LAST_NAME,FIRST_NAME,ROLE) values (1,'user1@example.com','123456789','https://example.com/user1.jpg','password1','Doe','John','cus');
Insert into EADM.SITE_USER (ID,EMAIL_ADDRESS,PHONE_NUMBER,PICTURE_URL,PASSWORD,LAST_NAME,FIRST_NAME,ROLE) values (2,'user2@example.com','987654321','https://example.com/user2.jpg','password2','Smith','Jane','cus');
REM INSERTING into EADM.USER_ADDRESS
SET DEFINE OFF;
REM INSERTING into EADM.USER_WALLET
SET DEFINE OFF;
REM INSERTING into EADM.VARIATION
SET DEFINE OFF;
Insert into EADM.VARIATION (ID,CATEGORY_ID,NAME) values (1,1,'Color');
REM INSERTING into EADM.VARIATION_OPTION
SET DEFINE OFF;
Insert into EADM.VARIATION_OPTION (ID,VARIATION_ID,VALUE) values (1,1,'Red');
Insert into EADM.VARIATION_OPTION (ID,VARIATION_ID,VALUE) values (2,1,'Blue');
--------------------------------------------------------
--  DDL for Trigger TRG_PRODUCT_AFTER_INSERT
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "EADM"."TRG_PRODUCT_AFTER_INSERT" 
AFTER INSERT ON product
FOR EACH ROW
DECLARE
    PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
    -- Your trigger logic here
    -- Perform necessary operations
    -- Commit or rollback if needed (within the autonomous transaction)
    DBMS_MVIEW.REFRESH('products_retrieve_materialize_view');
    COMMIT; -- Example of a commit within the autonomous transaction
END;
/
ALTER TRIGGER "EADM"."TRG_PRODUCT_AFTER_INSERT" ENABLE;
--------------------------------------------------------
--  DDL for Procedure CREATE_PRODUCT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "EADM"."CREATE_PRODUCT" (
    p_name              IN VARCHAR2,
    p_description       IN VARCHAR2,
    p_category_id       IN NUMBER,
    p_product_image     IN VARCHAR2,
    p_price             IN NUMBER,
    p_sku               IN VARCHAR2,
    p_quantity_in_stock IN NUMBER,
    p_product_item_image_list IN SYS.ODCIVARCHAR2LIST -- List of product item images
)
IS
    v_product_id   NUMBER;
    v_product_item_id   NUMBER; -- Declare a separate variable for product item ID
BEGIN
    -- Insert a new product into the product table
    INSERT INTO product (category_id, name, description, product_image)
    VALUES (p_category_id, p_name, p_description, p_product_image)
    RETURNING id INTO v_product_id;

    -- Insert a new product item into the product_item table
    INSERT INTO product_item (product_id, SKU, quantity_in_stock, price)
    VALUES (v_product_id, p_sku, p_quantity_in_stock, p_price)
    RETURNING id INTO v_product_item_id; -- Use a separate variable to capture the product item ID

    -- Insert product item images into the product_image table
    FOR i IN 1..p_product_item_image_list.COUNT LOOP
        INSERT INTO product_image (product_item_id, image_url)
        VALUES (v_product_item_id, p_product_item_image_list(i)); -- Use the product item ID here
    END LOOP;

    COMMIT;

    DBMS_OUTPUT.PUT_LINE('Product created successfully with ID: ' || v_product_id);
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('Error creating product: ' || SQLERRM);
        RAISE;
END Create_Product;

/
--------------------------------------------------------
--  DDL for Function VERIFY_WALLET_USER
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "EADM"."VERIFY_WALLET_USER" (user_id IN NUMBER, total_order IN NUMBER)
RETURN BOOLEAN
IS
    current_balance NUMBER;
BEGIN
    -- Get the current balance from the user_wallet table
    SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
    SELECT balance INTO current_balance FROM user_wallet WHERE user_id = verify_wallet_user.user_id;

    -- Check if the balance is sufficient for the order
    IF total_order <= current_balance THEN
        -- If balance is sufficient, update the balance and return true
        UPDATE user_wallet SET balance = balance - total_order WHERE user_id = verify_wallet_user.user_id;
        RETURN TRUE;
    ELSE
        -- If balance is not sufficient, return false
        RETURN FALSE;
    END IF;
END;

/
--------------------------------------------------------
--  Constraints for Table SHOP_ORDER
--------------------------------------------------------

  ALTER TABLE "EADM"."SHOP_ORDER" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "EADM"."SHOP_ORDER" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PRODUCT
--------------------------------------------------------

  ALTER TABLE "EADM"."PRODUCT" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "EADM"."PRODUCT" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PRODUCT_CONFIGURATION
--------------------------------------------------------

  ALTER TABLE "EADM"."PRODUCT_CONFIGURATION" ADD PRIMARY KEY ("PRODUCT_ITEM_ID", "VARIATION_OPTION_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SHIPPING_METHOD
--------------------------------------------------------

  ALTER TABLE "EADM"."SHIPPING_METHOD" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "EADM"."SHIPPING_METHOD" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ORDER_STATUS
--------------------------------------------------------

  ALTER TABLE "EADM"."ORDER_STATUS" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "EADM"."ORDER_STATUS" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table SITE_USER
--------------------------------------------------------

  ALTER TABLE "EADM"."SITE_USER" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "EADM"."SITE_USER" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ORDER_LINE
--------------------------------------------------------

  ALTER TABLE "EADM"."ORDER_LINE" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "EADM"."ORDER_LINE" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PROMOTION
--------------------------------------------------------

  ALTER TABLE "EADM"."PROMOTION" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "EADM"."PROMOTION" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PRODUCT_IMAGE
--------------------------------------------------------

  ALTER TABLE "EADM"."PRODUCT_IMAGE" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "EADM"."PRODUCT_IMAGE" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PRODUCT_ITEM
--------------------------------------------------------

  ALTER TABLE "EADM"."PRODUCT_ITEM" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "EADM"."PRODUCT_ITEM" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VARIATION_OPTION
--------------------------------------------------------

  ALTER TABLE "EADM"."VARIATION_OPTION" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "EADM"."VARIATION_OPTION" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ADDRESS
--------------------------------------------------------

  ALTER TABLE "EADM"."ADDRESS" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "EADM"."ADDRESS" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VARIATION
--------------------------------------------------------

  ALTER TABLE "EADM"."VARIATION" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "EADM"."VARIATION" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table COUNTRY
--------------------------------------------------------

  ALTER TABLE "EADM"."COUNTRY" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "EADM"."COUNTRY" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PRODUCT_CATEGORY
--------------------------------------------------------

  ALTER TABLE "EADM"."PRODUCT_CATEGORY" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "EADM"."PRODUCT_CATEGORY" ADD PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table USER_WALLET
--------------------------------------------------------

  ALTER TABLE "EADM"."USER_WALLET" ADD PRIMARY KEY ("USER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ORDER_LINE
--------------------------------------------------------

  ALTER TABLE "EADM"."ORDER_LINE" ADD CONSTRAINT "FK_ORDER_PRODUCT_ITEM" FOREIGN KEY ("PRODUCT_ITEM_ID")
	  REFERENCES "EADM"."PRODUCT_ITEM" ("ID") ON DELETE CASCADE ENABLE;
  ALTER TABLE "EADM"."ORDER_LINE" ADD CONSTRAINT "FK_SHOP_ORDER" FOREIGN KEY ("ORDER_ID")
	  REFERENCES "EADM"."SHOP_ORDER" ("ID") ON DELETE SET NULL ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PRODUCT
--------------------------------------------------------

  ALTER TABLE "EADM"."PRODUCT" ADD CONSTRAINT "FK_PRODUCT_CATEGORY_ID" FOREIGN KEY ("CATEGORY_ID")
	  REFERENCES "EADM"."PRODUCT_CATEGORY" ("ID") ON DELETE SET NULL ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PRODUCT_CONFIGURATION
--------------------------------------------------------

  ALTER TABLE "EADM"."PRODUCT_CONFIGURATION" ADD CONSTRAINT "FK_PC_PRODUCT_ITEM_ID" FOREIGN KEY ("PRODUCT_ITEM_ID")
	  REFERENCES "EADM"."PRODUCT_ITEM" ("ID") ON DELETE CASCADE ENABLE;
  ALTER TABLE "EADM"."PRODUCT_CONFIGURATION" ADD CONSTRAINT "FK_PC_VARIATION_OPTION_ID" FOREIGN KEY ("VARIATION_OPTION_ID")
	  REFERENCES "EADM"."VARIATION_OPTION" ("ID") ON DELETE SET NULL ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PRODUCT_ITEM
--------------------------------------------------------

  ALTER TABLE "EADM"."PRODUCT_ITEM" ADD CONSTRAINT "FK_PRODUCT_ID" FOREIGN KEY ("PRODUCT_ID")
	  REFERENCES "EADM"."PRODUCT" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PROMOTION_CATEGORY
--------------------------------------------------------

  ALTER TABLE "EADM"."PROMOTION_CATEGORY" ADD CONSTRAINT "FK_PROMOTION_CATEGORY_ID" FOREIGN KEY ("CATEGORY_ID")
	  REFERENCES "EADM"."PRODUCT_CATEGORY" ("ID") ON DELETE SET NULL ENABLE;
  ALTER TABLE "EADM"."PROMOTION_CATEGORY" ADD CONSTRAINT "FK_PROMOTION_ID" FOREIGN KEY ("PROMOTION_ID")
	  REFERENCES "EADM"."PROMOTION" ("ID") ON DELETE SET NULL ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SHOP_ORDER
--------------------------------------------------------

  ALTER TABLE "EADM"."SHOP_ORDER" ADD CONSTRAINT "FK_SHIPPING_METHOD" FOREIGN KEY ("SHIPPING_METHOD_ID")
	  REFERENCES "EADM"."SHIPPING_METHOD" ("ID") ON DELETE SET NULL ENABLE;
  ALTER TABLE "EADM"."SHOP_ORDER" ADD CONSTRAINT "FK_ORDER_STATUS" FOREIGN KEY ("ORDER_STATUS")
	  REFERENCES "EADM"."ORDER_STATUS" ("ID") ON DELETE SET NULL ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table USER_ADDRESS
--------------------------------------------------------

  ALTER TABLE "EADM"."USER_ADDRESS" ADD CONSTRAINT "FK_USER_ID" FOREIGN KEY ("USER_ID")
	  REFERENCES "EADM"."SITE_USER" ("ID") ON DELETE CASCADE ENABLE;
  ALTER TABLE "EADM"."USER_ADDRESS" ADD CONSTRAINT "FK_ADDRESS_ID" FOREIGN KEY ("ADDRESS_ID")
	  REFERENCES "EADM"."ADDRESS" ("ID") ON DELETE CASCADE ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VARIATION
--------------------------------------------------------

  ALTER TABLE "EADM"."VARIATION" ADD CONSTRAINT "FK_VARIATION_CATEGORY" FOREIGN KEY ("CATEGORY_ID")
	  REFERENCES "EADM"."PRODUCT_CATEGORY" ("ID") ON DELETE SET NULL ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table VARIATION_OPTION
--------------------------------------------------------

  ALTER TABLE "EADM"."VARIATION_OPTION" ADD CONSTRAINT "FK_VARIATION_ID" FOREIGN KEY ("VARIATION_ID")
	  REFERENCES "EADM"."VARIATION" ("ID") ON DELETE CASCADE ENABLE;
